version: "2" #版本号
services:
  # 注册中心
  sc-eureka:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 8761:8761
    restart: "always"
    container_name: sc-eureka1
    volumes:
      - ./sc-eureka/target/sc-eureka-0.0.1-SNAPSHOT-exe.jar:/sc-eureka-0.0.1-SNAPSHOT-exe.jar
    entrypoint: java -Xms128m -Xmx256m -jar /sc-eureka-0.0.1-SNAPSHOT-exe.jar --spring.profiles.active=sc-eureka1
    #mem_limit: 600000000  # 内存限制

  sc-eureka2:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 8762:8762
    restart: "always"
    container_name: sc-eureka2
    volumes:
      - ./sc-eureka/target/sc-eureka-0.0.1-SNAPSHOT-exe.jar:/sc-eureka-0.0.1-SNAPSHOT-exe.jar
    entrypoint: java -Xms128m -Xmx256m -jar /sc-eureka-0.0.1-SNAPSHOT-exe.jar --spring.profiles.active=sc-eureka2
    #mem_limit: 600000000  # 内存限制

  sc-eureka3:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 8763:8763
    restart: "always"
    container_name: sc-eureka3
    volumes:
      - ./sc-eureka/target/sc-eureka-0.0.1-SNAPSHOT-exe.jar:/sc-eureka-0.0.1-SNAPSHOT-exe.jar
    entrypoint: java -Xms128m -Xmx256m -jar /sc-eureka-0.0.1-SNAPSHOT-exe.jar --spring.profiles.active=sc-eureka3
    #mem_limit: 600000000  # 内存限制

  # 配置中心
  sc-config:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 8888:8888
    restart: "always"
    container_name: sc-config
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./sc-config/target/sc-config-0.0.1-SNAPSHOT-exe.jar:/sc-config-0.0.1-SNAPSHOT-exe.jar
      - ./repo-config/:/repo-config
    entrypoint: /entrypoint.sh -d sc-eureka:8761 -c 'java -Xms128m -Xmx256m -jar /sc-config-0.0.1-SNAPSHOT-exe.jar --spring.profiles.active=native,sc-config';
    depends_on:
      - sc-eureka
    external_links:
      - components_rabbitmq
    networks:
      - default
      - components_default

  # 配置中心2
  sc-config2:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 8889:8889
    restart: "always"
    container_name: sc-config2
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./sc-config/target/sc-config-0.0.1-SNAPSHOT-exe.jar:/sc-config-0.0.1-SNAPSHOT-exe.jar
      - ./repo-config/:/repo-config
    entrypoint: /entrypoint.sh -d sc-eureka:8761 -c 'java -Xms128m -Xmx256m -jar /sc-config-0.0.1-SNAPSHOT-exe.jar --spring.profiles.active=native,sc-config2';
    depends_on:
      - sc-eureka
    external_links:
      - components_rabbitmq
    networks:
      - default
      - components_default

  # 测试服务
  svc-test:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 9999:9999
    restart: "always"
    container_name: svc-test
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./svc-test/target/svc-test-0.0.1-SNAPSHOT-exe.jar:/svc-test-0.0.1-SNAPSHOT-exe.jar
    entrypoint: /entrypoint.sh -d sc-eureka:8761,sc-config:8888,sc-config2:8889 -c 'java -Xms64m -Xmx128m -jar /svc-test-0.0.1-SNAPSHOT-exe.jar';
    # 依赖的服务，在依赖的服务启动后，本服务才启动
    depends_on:
      - sc-eureka
      - sc-config
      - sc-config2
    # 连接本docker-compose以外的docker容器
    # 格式：docker-compose网络前缀_容器名（可选：加上_1，表示同名的第几个容器）
    external_links:
      - components_rabbitmq
      - components_kafka
    networks:
      # 当前compose的默认网络
      - default
      # 要连接的外部网络
      - components_default
    #mem_limit: 500000000 # 内存限制

  # 网关
  sc-gateway:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 9000:9000
    restart: "always"
    container_name: sc-gateway
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./sc-gateway/target/sc-gateway-0.0.1-SNAPSHOT-exe.jar:/sc-gateway-0.0.1-SNAPSHOT-exe.jar
    entrypoint: /entrypoint.sh -d sc-eureka:8761,sc-config:8888,sc-config2:8889 -c 'java -Xms128m -Xmx256m -jar /sc-gateway-0.0.1-SNAPSHOT-exe.jar';
    depends_on:
      - sc-eureka
      - sc-config
      - sc-config2
    external_links:
      - components_rabbitmq
    networks:
      - default
      - components_default
    #mem_limit: 600000000  # 内存限制

  # 熔断器聚合服务
  sc-hystrix-dashboard-turbine:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 8999:8999
    restart: "always"
    container_name: sc-hystrix-dashboard-turbine
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./sc-hystrix-dashboard-turbine/target/sc-hystrix-dashboard-turbine-0.0.1-SNAPSHOT-exe.jar:/sc-hystrix-dashboard-turbine-0.0.1-SNAPSHOT-exe.jar
    entrypoint: /entrypoint.sh -d sc-eureka:8761,sc-config:8888,sc-config2:8889 -c 'java -Xms128m -Xmx256m -jar /sc-hystrix-dashboard-turbine-0.0.1-SNAPSHOT-exe.jar';
    depends_on:
      - sc-eureka
      - sc-config
      - sc-config2
    external_links:
      - components_rabbitmq
    networks:
      - default
      - components_default
    #mem_limit: 500000000 # 内存限制

  # demo-admin服务
  svc-demo-admin:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 9001:9001
    restart: "always"
    container_name: svc-demo-admin
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./svc-demo-admin/target/svc-demo-admin-0.0.1-SNAPSHOT-exe.jar:/svc-demo-admin-0.0.1-SNAPSHOT-exe.jar
    entrypoint: /entrypoint.sh -d sc-eureka:8761,sc-config:8888,sc-config2:8889 -c 'java -Xms64m -Xmx128m -jar /svc-demo-admin-0.0.1-SNAPSHOT-exe.jar';
    depends_on:
      - sc-eureka
      - sc-config
      - sc-config2
    external_links:
      - components_rabbitmq
      - components_kafka
    networks:
      - default
      - components_default
    #mem_limit: 500000000 # 内存限制

  # demo-log服务
  svc-demo-log:
    image: mcpayment/ubuntu1404-java8:latest
    ports:
      - 9002:9002
    restart: "always"
    container_name: svc-demo-log
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./svc-demo-log/target/svc-demo-log-0.0.1-SNAPSHOT-exe.jar:/svc-demo-log-0.0.1-SNAPSHOT-exe.jar
    entrypoint: /entrypoint.sh -d sc-eureka:8761,sc-config:8888,sc-config2:8889 -c 'java -Xms64m -Xmx128m -jar /svc-demo-log-0.0.1-SNAPSHOT-exe.jar';
    depends_on:
      - sc-eureka
      - sc-config
      - sc-config2
    external_links:
      - components_rabbitmq
      - components_kafka
    networks:
      - default
      - components_default
    #mem_limit: 500000000 # 内存限制

networks:
  # components的docker-compose的默认网络
  # 可以通过docker network ls命令查询当前存在的所有网络
  components_default:
    # 标志为外部的
    external: true

