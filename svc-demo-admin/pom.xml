<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vicchan</groupId>
    <artifactId>svc-demo-admin</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>svc-demo-admin</name>
    <description>管理员服务</description>

    <parent>
        <groupId>com.vicchan</groupId>
        <artifactId>spring-cloud-sample</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <properties>
        <!--以下参数在mybatis生成器中起作用-->
        <!--包名-->
        <packageName>com.vicchan.svc.demo.admin</packageName>
    </properties>

    <dependencies>
        <!--注册中心客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- S支持全栈式Web开发，包括Tomcat和spring-webmvc。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--链路追踪-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>

        <!--配置中心 客户端-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>

        <!--消息总线-->
        <!--注意，加入bus-amqp后，会使得zipin的收集方式变成rabbitmq（默认http），导致收集不到数据-->
        <!--在配置文件中加入spring.zipkin.sender.type: web，可修改为默认http收集方式-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>

        <!--健康监控-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--把logback格式的日志转化成logstash格式-->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>

        <!--加入kafka支持-->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <!--logback对接kafka-->
        <dependency>
            <groupId>com.github.danielwegener</groupId>
            <artifactId>logback-kafka-appender</artifactId>
        </dependency>
        <!--json 依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-json</artifactId>
        </dependency>
        <!--shiro安全框架-->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring-boot-web-starter</artifactId>
        </dependency>
        <!-- Spring Boot Mybatis 依赖 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        <!-- mybatis-generator-core 依赖 -->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
        </dependency>

        <!--mybatis分页 依赖-->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
        </dependency>
        <!--mysql驱动 依赖-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--数据连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <!--feign服务间调用-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--注意添加插件的顺序，会影响插件运行的顺序-->
            <!-- clean插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <filesets>
                        <fileset>
                            <directory>${project.build.sourceDirectory}/com/vicchan/svc/demo/admin/pojo</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.build.sourceDirectory}/com/vicchan/svc/demo/admin/mapper</directory>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/src/main/resources/com/vicchan/svc/demo/admin/mapper
                            </directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!--mybatis generator 插件-->
            <!--mybatis反向生成工具-->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <!--注意不要修改1.3.5版本号，否则无法匹配一对多插件-->
                <!--<version>1.3.5</version>-->
                <version>1.3.7</version>
                <!--package之后，自动生成java代码-->
                <executions>
                    <execution>
                        <phase>clean</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configurationFile>
                        ${project.basedir}/src/main/resources/mybatis-generator/generator-config.xml
                    </configurationFile>
                    <overwrite>true</overwrite>
                    <verbose>true</verbose>
                    <!--<skip>true</skip>-->
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <!--实测不能删除版本号-->
                        <version>5.1.46</version>
                    </dependency>
                    <dependency>
                        <groupId>com.itfsw</groupId>
                        <artifactId>mybatis-generator-plugin</artifactId>
                        <version>1.2.6</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
