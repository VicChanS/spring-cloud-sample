<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vicchan</groupId>
    <artifactId>spring-cloud-sample</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-cloud-sample</name>
    <description>spring-cloud-sample</description>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
        <relativePath/>
    </parent>

    <modules>
        <module>svc-core</module>
        <module>sc-eureka</module>
        <module>sc-config</module>
        <module>sc-gateway</module>
        <module>sc-hystrix-dashboard-turbine</module>
        <module>svc-test</module>
        <module>svc-demo-admin</module>
        <module>svc-demo-log</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
        <!--xml中只能获取properties中的属性，把某些pom中常用的属性写到此处-->
        <basedir>${project.basedir}</basedir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <!--springcloud全家桶-->
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--把logback格式的日志转化成logstash格式-->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>4.11</version>
                <!--<version>5.0</version>-->
            </dependency>
            <!--加入kafka支持-->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>2.1.8.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>com.github.danielwegener</groupId>
                <artifactId>logback-kafka-appender</artifactId>
                <version>0.1.0</version>
            </dependency>

            <!--shiro安全框架-->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring-boot-web-starter</artifactId>
                <version>1.4.0</version>
            </dependency>
            <!-- Spring Boot Mybatis 依赖 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.2</version>
            </dependency>

            <!-- mybatis-generator-core 依赖 -->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <!--<version>1.3.5</version>-->
                <version>1.3.7</version>
            </dependency>

            <!-- mybatis pagehelper 分页依赖 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.2.5</version>
            </dependency>

            <!-- MySQL 连接驱动依赖 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.16</version>
            </dependency>

            <!--druid连接池 依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.10</version>
            </dependency>

            <!--json 依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-json</artifactId>
                <version>2.0.4.RELEASE</version>
            </dependency>
            <!-- lombok annotation -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.16.4</version>
            </dependency>

            <!--在线api文档-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>2.9.2</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>2.9.2</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!--注意添加插件的顺序，会影响插件运行的顺序-->
                <!-- clean插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <configuration>
                        <verbose>true</verbose>
                        <filesets>
                            <!--需要在使用此插件的module中，加入packageNameWithSeparator这个properties-->
                            <fileset>
                                <directory>${project.build.sourceDirectory}/${packageNameWithSeparator}/pojo</directory>
                            </fileset>
                            <fileset>
                                <directory>${project.build.sourceDirectory}/${packageNameWithSeparator}/mapper</directory>
                            </fileset>
                            <fileset>
                                <directory>${project.basedir}/src/main/resources/${packageNameWithSeparator}/mapper
                                </directory>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>

                <!--mybatis generator 插件-->
                <!--mybatis反向生成工具-->
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <!--注意不要修改1.3.5版本号，否则无法匹配一对多插件-->
                    <!--<version>1.3.5</version>-->
                    <version>1.3.7</version>
                    <!--package之后，自动生成java代码-->
                    <executions>
                        <execution>
                            <phase>clean</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <configurationFile>
                            ${project.basedir}/src/main/resources/mybatis-generator/generator-config.xml
                        </configurationFile>
                        <overwrite>true</overwrite>
                        <verbose>true</verbose>
                        <!--<skip>true</skip>-->
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <!--实测不能删除版本号-->
                            <version>8.0.16</version>
                        </dependency>
                        <dependency>
                            <groupId>com.itfsw</groupId>
                            <artifactId>mybatis-generator-plugin</artifactId>
                            <version>1.2.6</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!--maven编译打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--<configuration>
                    <executable>true</executable>
                    <skip>${plugin.maven.skip}</skip>
                </configuration>-->
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <!--spring-boot-maven-plugin默认打包的jar是用于执行，不能被依赖-->
                        <!--configuration中的配置表示输出两个jar，其中以exe结尾的jar用于执行，另一个可以被依赖-->
                        <configuration>
                            <!--classifier是可执行的jar的文件名的一部分，作为一个标志和默认的jar区分，可以是任意字符串-->
                            <classifier>exe</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
